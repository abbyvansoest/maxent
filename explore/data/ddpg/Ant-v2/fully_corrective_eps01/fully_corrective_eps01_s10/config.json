{
    "ac_kwargs":	{
        "hidden_sizes":	[
            64,
            64
        ]
    },
    "act_noise":	0.1,
    "actor_critic":	"mlp_actor_critic",
    "batch_size":	100,
    "env_fn":	"<function <lambda> at 0x7f1eccd44a60>",
    "epochs":	500,
    "eps":	0.01,
    "exp_name":	"fully_corrective_eps01",
    "explorer":	{
        "<explorer.Explorer object at 0x7f1eccd47f60>":	{
            "env":	{
                "<TimeLimit<AntEnv<Ant-v2>>>":	{
                    "_elapsed_steps":	0,
                    "_episode_started_at":	null,
                    "_max_episode_seconds":	null,
                    "_max_episode_steps":	1000,
                    "action_space":	{
                        "Box(8,)":	{
                            "dtype":	"float32",
                            "high":	"[1. 1. 1. 1. 1. 1. 1. 1.]",
                            "low":	"[-1. -1. -1. -1. -1. -1. -1. -1.]",
                            "np_random":	"<mtrand.RandomState object at 0x7f1ee052e990>",
                            "shape":	[
                                8
                            ]
                        }
                    },
                    "env":	{
                        "<AntEnv<Ant-v2>>":	{
                            "_ezpickle_args":	[],
                            "_ezpickle_kwargs":	{},
                            "_viewers":	{},
                            "action_space":	{
                                "Box(8,)":	{
                                    "dtype":	"float32",
                                    "high":	"[1. 1. 1. 1. 1. 1. 1. 1.]",
                                    "low":	"[-1. -1. -1. -1. -1. -1. -1. -1.]",
                                    "np_random":	"<mtrand.RandomState object at 0x7f1ee052e990>",
                                    "shape":	[
                                        8
                                    ]
                                }
                            },
                            "data":	"<mujoco_py.cymj.PyMjData object at 0x55bcdbba32f8>",
                            "frame_skip":	5,
                            "init_qpos":	"[0.   0.   0.75 1.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.\n 0.  ]",
                            "init_qvel":	"[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]",
                            "metadata":	{
                                "render.modes":	[
                                    "human",
                                    "rgb_array",
                                    "depth_array"
                                ],
                                "video.frames_per_second":	20
                            },
                            "model":	"<mujoco_py.cymj.PyMjModel object at 0x55bcdad5e688>",
                            "np_random":	"<mtrand.RandomState object at 0x7f1ee052ea68>",
                            "obs_dim":	111,
                            "observation_space":	{
                                "Box(111,)":	{
                                    "dtype":	"float32",
                                    "high":	"[inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf]",
                                    "low":	"[-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]",
                                    "np_random":	"<mtrand.RandomState object at 0x7f1ee052ea20>",
                                    "shape":	[
                                        111
                                    ]
                                }
                            },
                            "sim":	"<mujoco_py.cymj.MjSim object at 0x7f1ee04de598>",
                            "spec":	{
                                "EnvSpec(Ant-v2)":	{
                                    "_entry_point":	"gym.envs.mujoco:AntEnv",
                                    "_env_name":	"Ant",
                                    "_kwargs":	{},
                                    "_local_only":	false,
                                    "id":	"Ant-v2",
                                    "max_episode_seconds":	null,
                                    "max_episode_steps":	1000,
                                    "nondeterministic":	false,
                                    "reward_threshold":	6000.0,
                                    "tags":	{
                                        "wrapper_config.TimeLimit.max_episode_steps":	1000
                                    },
                                    "trials":	100
                                }
                            },
                            "viewer":	null
                        }
                    },
                    "metadata":	{
                        "render.modes":	[
                            "human",
                            "rgb_array",
                            "depth_array"
                        ],
                        "video.frames_per_second":	20
                    },
                    "observation_space":	{
                        "Box(111,)":	{
                            "dtype":	"float32",
                            "high":	"[inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf inf\n inf inf inf]",
                            "low":	"[-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf\n -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]",
                            "np_random":	"<mtrand.RandomState object at 0x7f1ee052ea20>",
                            "shape":	[
                                111
                            ]
                        }
                    },
                    "reward_range":	[
                        -Infinity,
                        Infinity
                    ]
                }
            },
            "get_actions":	[
                "<function load_policy.<locals>.<lambda> at 0x7f1e4ee919d8>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ee0423f28>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40b4048>",
                "<function load_policy.<locals>.<lambda> at 0x7f1dc814db70>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ecbba2c80>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ecbba2ea0>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40b40d0>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec93d7048>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec93c7158>",
                "<function load_policy.<locals>.<lambda> at 0x7f1dc81d6268>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec402a378>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ce4334488>",
                "<function load_policy.<locals>.<lambda> at 0x7f1c2052c598>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40b76a8>",
                "<function load_policy.<locals>.<lambda> at 0x7f1d402c27b8>",
                "<function load_policy.<locals>.<lambda> at 0x7f1e041368c8>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40b19d8>",
                "<function load_policy.<locals>.<lambda> at 0x7f1e040b9ae8>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40cabf8>",
                "<function load_policy.<locals>.<lambda> at 0x7f19ce4add08>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40b10d0>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec93a1048>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec40a80d0>",
                "<function load_policy.<locals>.<lambda> at 0x7f1dc81a21e0>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ec93ad2f0>",
                "<function load_policy.<locals>.<lambda> at 0x7f1ecbbcf400>",
                "<function load_policy.<locals>.<lambda> at 0x7f1c204fe510>"
            ]
        }
    },
    "gamma":	0.99,
    "logger":	{
        "<spinup.utils.logx.EpochLogger object at 0x7f1950239fd0>":	{
            "epoch_dict":	{},
            "exp_name":	"fully_corrective_eps01",
            "first_row":	true,
            "log_current_row":	{},
            "log_headers":	[],
            "output_dir":	"/home/abbyvs/maxent/explore/data/ddpg/fully_corrective_eps01/fully_corrective_eps01_s10",
            "output_file":	{
                "<_io.TextIOWrapper name='/home/abbyvs/maxent/explore/data/ddpg/fully_corrective_eps01/fully_corrective_eps01_s10/progress.txt' mode='w' encoding='UTF-8'>":	{
                    "mode":	"w"
                }
            }
        }
    },
    "logger_kwargs":	{
        "exp_name":	"fully_corrective_eps01",
        "output_dir":	"/home/abbyvs/maxent/explore/data/ddpg/fully_corrective_eps01/fully_corrective_eps01_s10"
    },
    "max_ep_len":	1000,
    "pi_lr":	0.001,
    "polyak":	0.995,
    "q_lr":	0.001,
    "replay_size":	1000000,
    "save_freq":	1,
    "seed":	10,
    "start_steps":	10000,
    "steps_per_epoch":	5000
}